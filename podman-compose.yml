services:
  frontend:
    build: ./frontend
    container_name: frontend
    restart: always
    ports:
      - "3000:3000"
    
  backend:
    build: ./backend
    container_name: backend
    restart: always
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_PORT=${DB_PORT}
      - DB_HOST=${DB_HOST}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - SALT=${SALT}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - DEPLOYMENT=${DEPLOYMENT}
  
  database:
    image: postgres:15.1-alpine3.16
    restart: always
    ports: 
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
     
  pgadmin4:
    image: elestio/pgadmin
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_PORT=8080
    ports:
      - "8080:8080"
    volumes:
      - ./servers.json:/pgadmin4/servers.json

volumes:
  pgdata:
